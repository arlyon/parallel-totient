#!/usr/bin/env bash

# Initialize our own variables:
cores="4"

cd build
module load cmake
module load intel/mpi/64
cmake . > /dev/null 2>&1

usage() {
    echo "Usage: $0 [-n <cores>] BINARY" 1>&2;
    exit 1;
}

while getopts "h?n:" opt; do
    case "$opt" in
    h|\?)
        usage
        ;;
    n)
        cores=${OPTARG}
        ;;
    \? )
        echo "Invalid option: $OPTARG" 1>&2
        ;;
    : )
        echo "Invalid option: $OPTARG requires an argument" 1>&2
        ;;
    esac
done
shift $((OPTIND-1))

binary=${1:-all}

echo -e "\e[32mBuilding ${binary}\e[0m"
cmake --build . --target ${binary}
rc=$?; if [[ ${rc} != 0 ]] || [[ ${binary} == "all" ]]; then exit ${rc}; fi
echo -e "\e[32mRunning ${1} on ${cores} cores\e[0m"
srun --partition=amd-longq -N ${cores} --mpi=pmi2 ${1}

cd ..
