#!/usr/bin/env bash

# Initialize our own variables:
machines="1"
release_mode="Release"
bench=""

usage() {
    echo "Usage: $0 [-n <machines>] BINARY" 1>&2;
    exit 1;
}

while getopts "h?n:db:" opt; do
    case "$opt" in
    h|\?)
        usage
        ;;
    n)
        machines=${OPTARG}
        ;;
    d)
        release_mode="Debug"
        ;;
    b)
        bench=${OPTARG}
        ;;
    \? )
        echo "Invalid option: $OPTARG" 1>&2
        ;;
    : )
        echo "Invalid option: $OPTARG requires an argument" 1>&2
        ;;
    esac
done
shift $((OPTIND-1))
binary=${1:-all}
shift

module load intel/mpi/64

if [[ ! ${bench} ]]; then
  mkdir -p build
  cd build
  module load cmake
  echo -e "\e[32mBuilding ${binary}\e[0m"
  cmake -DCMAKE_BUILD_TYPE=${release_mode} .. > /dev/null 2>&1
  make ${binary}
  cd ..
fi

rc=$?; if [[ ${rc} != 0 ]] || [[ ${binary} == "all" ]]; then exit ${rc}; fi
echo -e "\e[32mRunning ${binary} on ${machines} machine(s) with args ${@}\e[0m"

if [ ! ${bench} ]; then
    srun --partition=amd-shortq -N ${machines} --mpi=pmi2 build/${binary} ${@}
else
    srun --partition=amd-shortq -N ${machines} --mpi=pmi2 build/${binary} ${@} | tee ${bench}
fi
